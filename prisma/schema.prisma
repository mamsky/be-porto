// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(uuid())
  username    String @unique
  email       String @unique
  password    String

  profile     Profile[]
  project     Project[]
  tech        Tech[]
  work        Work[]
}

model Profile {
  id          String @id @default(uuid())
  surname     String
  images      String
  profession  String
  bio         String 
  location    String
  status      Option 

  userId      String
  user        User  @relation(fields: [userId], references: [id])
}

model Project {
  id            String @id @default(uuid())
  title         String
  description   String
  tech          ArrTech @relation(fields: [techId], references: [id])
  techId        String
  demo          String?
  github        String?
  images        String

  userId        String
  user          User @relation(fields: [userId], references: [id])
}

model ArrTech {
  id             String @id @default(uuid())
  tech           String
  techstack      Project[]
}

model Tech {
  id          String @id @default(uuid())
  name        String
  images      String

  userId      String
  user        User @relation(fields: [userId], references: [id])
}

model Work {
  id            String @id @default(uuid())
  title         String
  location      String
  description   ArrDesc @relation(fields: [descriptionId], references: [id])
  descriptionId String
  date          String
  images        String

  userId        String
  user          User @relation(fields: [userId], references: [id])
}

model ArrDesc {
  id          String @id @default(uuid())
  desc        String?
  description Work[]
}

enum Option {
  true
  false
}